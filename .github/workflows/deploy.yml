name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: usecase-dashboard
  REGION: us-central1

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker authentication
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:${{ github.sha }} .
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:${{ github.sha }} \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:latest

      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/${{ env.SERVICE }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --port 3000 \
            --allow-unauthenticated \
            --min-instances 0 \
            --max-instances 100 \
            --memory 1Gi \
            --cpu 1 \
            --timeout 300 \
            --set-env-vars "NODE_ENV=production,NEXT_TELEMETRY_DISABLED=1,GCP_PROJECT_ID=${{ env.PROJECT_ID }},GCP_STORAGE_BUCKET=${{ env.PROJECT_ID }}-uploads" \
            --set-secrets "\
              DATABASE_URL=database-url:latest,\
              CLERK_SECRET_KEY=clerk-secret-key:latest,\
              NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=clerk-publishable-key:latest,\
              UPSTASH_REDIS_REST_URL=upstash-redis-url:latest,\
              UPSTASH_REDIS_REST_TOKEN=upstash-redis-token:latest,\
              REDIS_URL=redis-url:latest,\
              WEBHOOK_SECRET=webhook-secret:latest"

      - name: Show service URL
        run: |
          echo "Service deployed to:"
          gcloud run services describe ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --format 'value(status.url)'

  migrate:
    name: Run database migrations
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_DIRECT }}
        run: npx prisma migrate deploy